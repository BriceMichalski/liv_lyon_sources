<?php

namespace LIV\AppBundle\Repository;

use LIV\AppBundle\Entity\Tag;

/**
 * PlaceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlaceRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $slug
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneFullBySlug($slug)
    {
        $queryBuilder = $this->createQueryBuilder('plcs')
            ->where("plcs.slug = :slug")
            ->setParameter('slug', $slug)
            ->leftJoin('plcs.address', 'ddrss')
            ->addSelect('ddrss')
            ->leftJoin('plcs.images', 'mgs')
            ->addSelect('mgs')
            ->leftJoin('plcs.tags', 'tgs')
            ->addSelect('tgs')
        ;

        return $queryBuilder->getQuery()->getOneOrNullResult();
    }


    public function findLastWithImage()
    {
        $queryBuilder = $this->createQueryBuilder('plc')
            ->where("plc.id >= 0")
            ->orderBy('plc.createdAt', 'DESC')
            ->setMaxResults(1)
            ->leftJoin('plc.images', 'mgs')
            ->addSelect('mgs');

        return $queryBuilder->getQuery()->getOneOrNullResult();
    }

    public function findAllByTagName(Tag $tag)
    {
        $queryBuilder = $this->createQueryBuilder('plcs')
            ->where("plcs.id >= 0")
            ->leftJoin('plcs.tags', 'tags')
            ->where("tags = :tags")
            ->setParameter('tags', $tag)
        ;

        return $queryBuilder->getQuery()->getArrayResult();
    }
}
